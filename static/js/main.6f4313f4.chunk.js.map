{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onAdd","className","onClick","style","backgroundColor","defaultProps","Header","title","button","Task","task","onDelete","reminder","onDoubleClick","id","day","Tasks","tasks","map","i","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","htmlFor","type","placeholder","value","onChange","target","checked","background","App","showAdd","setShowAdd","setTasks","Math","ceil","random","taskBaru","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAGA,SAASA,EAAT,GAAyC,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,KAAMC,EAAQ,EAARA,MAC5B,OACA,wBAAQC,UAAU,MAAMC,QAASF,EAAOG,MAAO,CAACC,gBAAgBN,GAAhE,SAAyEC,IAI7EF,EAAOQ,aAAe,CAClBP,MAAO,QACPC,KAAM,UAQKF,QChBf,SAASS,EAAT,GAAyC,IAAxBC,EAAuB,EAAvBA,MAAOP,EAAgB,EAAhBA,MAAOQ,EAAS,EAATA,OAC3B,OACI,yBAAQP,UAAU,SAAlB,UACI,6BAAKM,IAEL,cAAC,EAAD,CAAQT,MAAM,OAAOC,KAAMS,EAAS,QAAU,MAAOR,MAAOA,OAMxEM,EAAOD,aAAe,CAClBE,MAAO,gBAcID,Q,OClBAG,MATf,YAA6C,IAA7BC,EAA4B,EAA5BA,KAAMC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SAC5B,OACI,sBAAKX,UAAS,eAAUS,EAAKE,SAAW,WAAa,IAAMC,cAAe,kBAAID,EAASF,EAAKI,KAA5F,UACI,+BAAKJ,EAAKX,KAAV,IAAgB,cAAC,IAAD,CAASE,UAAU,QAAQC,QAAS,kBAAKS,EAASD,EAAKI,UACvE,4BAAIJ,EAAKK,UCMNC,MAVf,YAA+C,IAA9BC,EAA6B,EAA7BA,MAAON,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SAC9B,OACI,mCACKK,EAAMC,KAAI,SAACR,EAAMS,GAAP,OACP,cAAC,EAAD,CAAcT,KAAMA,EAAMC,SAAUA,EAAUC,SAAUA,GAA7CO,SC4CZC,MA/Cf,YAA6B,IAAVpB,EAAS,EAATA,MACf,EAAwBqB,mBAAS,IAAjC,mBAAOtB,EAAP,KAAauB,EAAb,KACA,EAAsBD,mBAAS,IAA/B,mBAAON,EAAP,KAAYQ,EAAZ,KACA,EAAgCF,oBAAS,GAAzC,mBAAOT,EAAP,KAAiBY,EAAjB,KAkBA,OACI,uBAAMvB,UAAU,WAAWwB,SAjBf,SAACC,GAEbA,EAAEC,iBAEU,KAAT5B,GAKHC,EAAM,CAACD,OAAMgB,MAAKH,aAElBU,EAAQ,IACRC,EAAO,IACPC,GAAY,IARRI,MAAM,sCAYV,UACE,sBAAK3B,UAAU,eAAf,UACE,uBAAO4B,QAAQ,OAAf,kBACA,uBAAOC,KAAK,OAAOhB,GAAG,OAAOiB,YAAY,OAAOC,MAAOjC,EAEvDkC,SAAU,SAACP,GAAD,OAAMJ,EAAQI,EAAEQ,OAAOF,aAEnC,sBAAK/B,UAAU,eAAf,UACE,uBAAO4B,QAAQ,MAAf,iBACA,uBAAOC,KAAK,OAAOhB,GAAG,MAAMiB,YAAY,eAAeC,MAAOjB,EAE9DkB,SAAU,SAACP,GAAD,OAAMH,EAAOG,EAAEQ,OAAOF,aAElC,sBAAK/B,UAAU,kCAAf,UACE,uBAAO4B,QAAQ,WAAf,sBACA,uBAAOC,KAAK,WAAUK,QAASvB,EAAUE,GAAG,WAAWkB,MAAOpB,EAE9DqB,SAAU,SAACP,GAAD,OAAMF,EAAYE,EAAEQ,OAAOC,eAGvC,uBAAOL,KAAK,SAAS7B,UAAU,gBAAgBE,MAAO,CAACiC,WAAW,eCN7DC,MAjCf,WACE,MAA8BhB,oBAAS,GAAvC,mBAAOiB,EAAP,KAAgBC,EAAhB,KAEA,EAA0BlB,mBAAS,IAAnC,mBAAOJ,EAAP,KAAcuB,EAAd,KAoBA,OACE,sBAAKvC,UAAU,YAAf,UACE,cAAC,EAAD,CAAQD,MAAO,kBAAIuC,GAAYD,IAAU9B,OAAQ8B,IAChDA,GAAW,cAAC,EAAD,CAAStC,MApBP,SAACU,GACf,IAAMI,EAAK2B,KAAKC,KAAqB,IAAhBD,KAAKE,UAAmB,EAEvCC,EAAQ,aAAI9B,MAAOJ,GAEzB8B,EAAS,GAAD,mBAAKvB,GAAL,CAAY2B,QAgBnB3B,EAAM4B,OAAS,EAAI,cAAC,EAAD,CAAO5B,MAAOA,EAAON,SAZ1B,SAACG,GACnB0B,EAASvB,EAAM6B,QAAO,SAACpC,GAAD,OAASA,EAAKI,KAAOA,OAWuBF,SARlD,SAACE,GAChB0B,EAASvB,EAAMC,KAAI,SAACR,GAAD,OAASA,EAAKI,KAAOA,EAAZ,2BAAqBJ,GAArB,IAA2BE,UAAWF,EAAKE,WAAYF,SAOO,4BCrB/EqC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6f4313f4.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\n\r\nfunction Button  ({color, text, onAdd}) {\r\n    return (\r\n    <button className=\"btn\" onClick={onAdd} style={{backgroundColor:color}}>{text}</button>\r\n    )\r\n}\r\n\r\nButton.defaultProps = {\r\n    color: 'black',\r\n    text: 'Button'\r\n}\r\n\r\nButton.propTypes = {\r\n    color: PropTypes.string,\r\n    text: PropTypes.string,\r\n    onClick: PropTypes.func\r\n}\r\nexport default Button\r\n","// import PropTypes from 'prop-types'\r\nimport Button from './Button'\r\n\r\nfunction Header({title, onAdd, button}) {\r\n    return (\r\n        <header className=\"header\">\r\n            <h1>{title}</h1>\r\n            {/* reuseble button */}\r\n            <Button color='blue' text={button ? \"Close\" : \"Add\"} onAdd={onAdd} />\r\n        </header>\r\n    )\r\n}\r\n\r\n//default props\r\nHeader.defaultProps = {\r\n    title: \"Task Manager\"\r\n}\r\n\r\n//make inline style\r\n/*const headingStyle = {\r\n    color: 'blue',\r\n    backgroundColor: 'grey'\r\n}*/\r\n\r\n//PropTypes, make title must a string\r\n/*Header.propTypes = {\r\n    title: PropTypes.string,\r\n}*/\r\n\r\nexport default Header\r\n","import { FaTimes } from 'react-icons/fa'\r\n\r\nfunction Task({ task, onDelete, reminder }) {\r\n    return (\r\n        <div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={()=>reminder(task.id)}>\r\n            <h3>{task.text} <FaTimes className=\"icons\" onClick={()=> onDelete(task.id)}/></h3>\r\n            <p>{task.day}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Task\r\n","import Task from \"./Task\"\r\n\r\nfunction Tasks({ tasks, onDelete, reminder }) {\r\n    return (\r\n        <>\r\n            {tasks.map((task, i) => (\r\n                <Task key={i} task={task} onDelete={onDelete} reminder={reminder}/>\r\n            ))}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tasks\r\n","import { useState } from 'react'\r\n\r\n\r\nfunction AddTask({ onAdd }) {\r\n    const [text, setText] = useState('')\r\n    const [day, setDay] = useState('')\r\n    const [reminder, setReminder] = useState(false)\r\n\r\n    const newTask = (e) => {\r\n        //clear a default behavior of submit\r\n        e.preventDefault();\r\n\r\n        if(text === ''){\r\n            alert(\"you must put the name of the task\")\r\n            return\r\n        }\r\n\r\n        onAdd({text, day, reminder})\r\n\r\n        setText('')\r\n        setDay('')\r\n        setReminder(false)\r\n    }\r\n\r\n    return (\r\n        <form className=\"add-form\" onSubmit={newTask}>\r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"task\">Task</label>\r\n            <input type=\"text\" id=\"task\" placeholder=\"Task\" value={text}\r\n            //how change the value of the state from form\r\n            onChange={(e)=> setText(e.target.value)} />\r\n          </div>  \r\n          <div className=\"form-control\">\r\n            <label htmlFor=\"day\">Day</label>\r\n            <input type=\"text\" id=\"day\" placeholder=\"Day and Time\" value={day}\r\n            //how change the value of the state from form\r\n            onChange={(e)=> setDay(e.target.value)}  />\r\n          </div>  \r\n          <div className=\"form-control form-control-check\">\r\n            <label htmlFor=\"reminder\">Reminder</label>\r\n            <input type=\"checkbox\"checked={reminder} id=\"reminder\" value={reminder}\r\n            //how change the value of the state from form\r\n            onChange={(e)=> setReminder(e.target.checked)} />\r\n          </div>\r\n\r\n          <input type=\"submit\" className=\"btn btn-block\" style={{background:\"green\"}}/>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import { useState } from \"react\"\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\n\nfunction App() {\n  const [showAdd, setShowAdd] = useState(false)\n\n  const [tasks, setTasks] = useState([])\n\n    //add task\n    const addTask = (task) => {\n      const id = Math.ceil(Math.random() * 2000) + 1\n\n      const taskBaru = {id, ...task}\n\n      setTasks([...tasks, taskBaru])\n    }\n\n    //delete task\n  const deleteTask = (id) => {\n   setTasks(tasks.filter((task)=> task.id !== id))\n  }\n\n  const reminder = (id) => {\n    setTasks(tasks.map((task)=> task.id === id ? {...task, reminder: !task.reminder} : task))\n  }\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={()=>setShowAdd(!showAdd)} button={showAdd}/>\n      {showAdd && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} reminder={reminder} /> : \"You don't have a task\"}\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}